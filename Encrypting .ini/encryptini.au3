#include <GUIconstants.au3>
#include <crypt.au3>
#include <date.au3>
#include <File.au3>
#include <GUIConstantsEx.au3>
#include <WindowsConstants.au3>
#include <Word.au3>

Local $filename, $EncryptionKey = "91305D1C12D802F2DFDC946DEF7C1363", $elicensekey = "", $eport = "", $ebaud = "", $dlicensekey ="", $dport = "", $dbaud = "", $GUIhandle
Local $espeed, $eshow, $eblock, $eexclude, $eidle, $edisclaimer, $dspeed, $dshow, $dblock, $dexclude, $didle, $ddisclaimer, $WIN[15], $MIN[15], $ButtonSave, $ButtonCancel
Local $msg, $Encrypt[25], $fileOpen, $eprogcheck, $eprogrun, $elogp, $elogopt, $edir, $dprogcheck, $dprogrun, $dlogp, $dlogopt, $ddir
Local $eauto1, $eauto2, $eauto3, $eauto4, $eauto5, $eauto6, $eauto7, $eauto8, $eauto9, $eauto10
Local $dauto1, $dauto2, $dauto3, $dauto4, $dauto5, $dauto6, $dauto7, $dauto8, $dauto9, $dauto10


FileExplorer()
storeFileName()
ReadandDecrypt()
SetGUI()
HotKeySet("{F1}", "Word")
While 1
   $msg = GUIGetMsg()
   Select
   Case $msg = $ButtonCancel Or $msg = $GUI_EVENT_CLOSE
	  Quit()
   Case $msg = $ButtonSave
      EncryptandSave()
   EndSelect
WEnd

;Closes the window
Func Quit()
   Exit
EndFunc


;file explorer
Func FileExplorer()
   $fileOpen = FileOpenDialog("Browse to select the file", @WindowsDir,"")
   Select
	  case $fileOpen = "."
		 Exit
	  case $fileOpen = ""
		 MsgBox(0, "", "Wrong file type selected!")
		 Quit()
   EndSelect
EndFunc

;stores value from FileExplorer() into $filename
Func storeFileName()
   $filename = $fileOpen
   return $filename
EndFunc

;encrypts the data then inserts it back into the file
Func EncryptandSave()
   _Crypt_Startup()
   $Encrypt[1] = _Crypt_EncryptData(GUICtrlRead($WIN[1]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[2] = _Crypt_EncryptData(GUICtrlRead($WIN[2]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[3] = _Crypt_EncryptData(GUICtrlRead($WIN[3]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[4] = _Crypt_EncryptData(GUICtrlRead($WIN[4]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[5] = _Crypt_EncryptData(GUICtrlRead($WIN[5]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[6] = _Crypt_EncryptData(GUICtrlRead($WIN[6]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[7] = _Crypt_EncryptData(GUICtrlRead($WIN[7]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[8] = _Crypt_EncryptData(GUICtrlRead($WIN[8]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[9] = _Crypt_EncryptData(GUICtrlRead($WIN[9]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[10] = _Crypt_EncryptData(GUICtrlRead($WIN[10]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[11] = _Crypt_EncryptData(GUICtrlRead($WIN[11]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[12] = _Crypt_EncryptData(GUICtrlRead($WIN[12]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[13] = _Crypt_EncryptData(GUICtrlRead($WIN[13]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[14] = _Crypt_EncryptData(GUICtrlRead($MIN[1]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[15] = _Crypt_EncryptData(GUICtrlRead($MIN[2]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[16] = _Crypt_EncryptData(GUICtrlRead($MIN[3]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[17] = _Crypt_EncryptData(GUICtrlRead($MIN[4]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[18] = _Crypt_EncryptData(GUICtrlRead($MIN[5]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[19] = _Crypt_EncryptData(GUICtrlRead($MIN[6]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[20] = _Crypt_EncryptData(GUICtrlRead($MIN[7]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[21] = _Crypt_EncryptData(GUICtrlRead($MIN[8]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[22] = _Crypt_EncryptData(GUICtrlRead($MIN[9]), $EncryptionKey, $CALG_AES_256)
   $Encrypt[23] = _Crypt_EncryptData(GUICtrlRead($MIN[10]), $EncryptionKey, $CALG_AES_256)
   _Crypt_Shutdown()
   FileOpen($filename, 1)
   _FileWriteToLine($filename, 1, $elicensekey, 0)
   _FileWriteToLine($filename, 2, $Encrypt[1], 1)
   _FileWriteToLine($filename, 3, $Encrypt[2], 1)
   _FileWriteToLine($filename, 4, $Encrypt[3], 1)
   _FileWriteToLine($filename, 5, $Encrypt[4], 1)
   _FileWriteToLine($filename, 6, $Encrypt[5], 1)
   _FileWriteToLine($filename, 7, $Encrypt[6], 1)
   _FileWriteToLine($filename, 8, $Encrypt[7], 1)
   _FileWriteToLine($filename, 9, $Encrypt[8], 1)
   _FileWriteToLine($filename, 10, $Encrypt[9], 1)
   _FileWriteToLine($filename, 11, $Encrypt[10], 1)
   _FileWriteToLine($filename, 12, $Encrypt[11], 1)
   _FileWriteToLine($filename, 13, $Encrypt[12], 1)
   _FileWriteToLine($filename, 14, $Encrypt[13], 1)
   _FileWriteToLine($filename, 15, $Encrypt[14], 1)
   _FileWriteToLine($filename, 16, $Encrypt[15], 1)
   _FileWriteToLine($filename, 17, $Encrypt[16], 1)
   _FileWriteToLine($filename, 18, $Encrypt[17], 1)
   _FileWriteToLine($filename, 19, $Encrypt[18], 1)
   _FileWriteToLine($filename, 20, $Encrypt[19], 1)
   _FileWriteToLine($filename, 21, $Encrypt[21], 1)
   _FileWriteToLine($filename, 22, $Encrypt[22], 1)
   _FileWriteToLine($filename, 23, $Encrypt[23], 1)
   FileClose($filename)
   Quit()
EndFunc

;opens and reads the file by line and then decrypts it
Func ReadandDecrypt()
   FileOpen($filename)
   $elicensekey = FileReadLine($filename, 1)
   $eport = FileReadLine($filename, 2)
   $ebaud = FileReadline($filename, 3)
   $espeed = FileReadLine($filename, 4)
   $eshow = FileReadLine($filename, 5)
   $eblock = FileReadLine($filename, 6)
   $eexclude = FileReadLine($filename, 7)
   $eidle = FileReadLine($filename, 8)
   $edisclaimer = FileReadLine($filename, 9)
   $eprogcheck = FileReadLine($filename, 10)
   $eprogrun = FileReadLine($filename, 11)
   $edir = FileReadLine($filename, 12)
   $elogp = FileReadLine($filename, 13)
   $elogopt = FileReadLine($filename, 14)
   $eauto1 = FileReadLine($filename, 15)
   $eauto2 = FileReadLine($filename, 16)
   $eauto3 = FileReadLine($filename, 17)
   $eauto4 = FileReadLine($filename, 18)
   $eauto5 = FileReadLine($filename, 19)
   $eauto6 = FileReadLine($filename, 20)
   $eauto7 = FileReadLine($filename, 21)
   $eauto8 = FileReadLine($filename, 22)
   $eauto9 = FileReadLine($filename, 23)
   $eauto10 = FileReadLine($filename, 24)
   FileClose($filename)
   ;ConsoleWrite($elicensekey & @CRLF)
   ;ConsoleWrite($eport & @CRLF)
   ;ConsoleWrite($ebaud & @CRLF)
   ;ConsoleWrite($espeed & @CRLF)
   ;ConsoleWrite($eshow & @CRLF)
   ;ConsoleWrite($eblock & @CRLF)
   ;ConsoleWrite($eexclude & @CRLF)
   ;ConsoleWrite($eidle & @CRLF)
   ;ConsoleWrite($edisclaimer & @CRLF)
   ;ConsoleWrite($eprogcheck & @CRLF)
   ;ConsoleWrite($eprogrun & @CRLF)
   ;ConsoleWrite($edir & @CRLF)
   ;ConsoleWrite($elogp & @CRLF)
   ;ConsoleWrite($elogopt & @CRLF)
   ;ConsoleWrite($eauto1 & @CRLF)
   ;ConsoleWrite($eauto2 & @CRLF)
   ;ConsoleWrite($eauto3 & @CRLF)
   ;ConsoleWrite($eauto4 & @CRLF)
   ;ConsoleWrite($eauto5 & @CRLF)
   ;ConsoleWrite($eauto6 & @CRLF)
   ;ConsoleWrite($eauto7 & @CRLF)
   ;ConsoleWrite($eauto8 & @CRLF)
   ;ConsoleWrite($eauto9 & @CRLF)
   ;ConsoleWrite($eauto10 & @CRLF)
   _Crypt_Startup()
   $dlicensekey = BinaryToString(_Crypt_DecryptData($elicensekey, $EncryptionKey, $CALG_AES_256))
   $dport = BinaryToString(_Crypt_DecryptData($eport, $EncryptionKey, $CALG_AES_256))
   $dbaud = BinaryToString(_Crypt_DecryptData($ebaud, $EncryptionKey, $CALG_AES_256))
   $dspeed = BinaryToString(_Crypt_DecryptData($espeed, $EncryptionKey, $CALG_AES_256))
   $dshow = BinaryToString(_Crypt_DecryptData($eshow, $EncryptionKey, $CALG_AES_256))
   $dblock = BinaryToString(_Crypt_DecryptData($eblock, $EncryptionKey, $CALG_AES_256))
   $dexclude = BinaryToString(_Crypt_DecryptData($eexclude, $EncryptionKey, $CALG_AES_256))
   $didle = BinaryToString(_Crypt_DecryptData($eidle, $EncryptionKey, $CALG_AES_256))
   $ddisclaimer = BinaryToString(_Crypt_DecryptData($edisclaimer, $EncryptionKey, $CALG_AES_256))
   $dprogcheck = BinaryToString(_Crypt_DecryptData($eprogcheck, $EncryptionKey, $CALG_AES_256))
   $dprogrun = BinaryToString(_Crypt_DecryptData($eprogrun, $EncryptionKey, $CALG_AES_256))
   $ddir = BinaryToString(_Crypt_DecryptData($edir, $EncryptionKey, $CALG_AES_256))
   $dlogp = BinaryToString(_Crypt_DecryptData($elogp, $EncryptionKey, $CALG_AES_256))
   $dlogopt = BinaryToString(_Crypt_DecryptData($elogopt, $EncryptionKey, $CALG_AES_256))
   $dauto1 = BinaryToString(_Crypt_DecryptData($eauto1, $EncryptionKey, $CALG_AES_256))
   $dauto2 = BinaryToString(_Crypt_DecryptData($eauto2, $EncryptionKey, $CALG_AES_256))
   $dauto3 = BinaryToString(_Crypt_DecryptData($eauto3, $EncryptionKey, $CALG_AES_256))
   $dauto4 = BinaryToString(_Crypt_DecryptData($eauto4, $EncryptionKey, $CALG_AES_256))
   $dauto5 = BinaryToString(_Crypt_DecryptData($eauto5, $EncryptionKey, $CALG_AES_256))
   $dauto6 = BinaryToString(_Crypt_DecryptData($eauto6, $EncryptionKey, $CALG_AES_256))
   $dauto7 = BinaryToString(_Crypt_DecryptData($eauto7, $EncryptionKey, $CALG_AES_256))
   $dauto8 = BinaryToString(_Crypt_DecryptData($eauto8, $EncryptionKey, $CALG_AES_256))
   $dauto9 = BinaryToString(_Crypt_DecryptData($eauto9, $EncryptionKey, $CALG_AES_256))
   $dauto10 = BinaryToString(_Crypt_DecryptData($eauto10, $EncryptionKey, $CALG_AES_256))
   _Crypt_Shutdown()
EndFunc

;GUI window
Func SetGUI()
   $GUIhandle = GUICreate("Archangel Configuration", 500, 450)
   GUISetBkColor(0x3399CC)   ;Sets Background color
   $ButtonSave = GUICtrlCreateButton("Save", 185, 400, 45, 30)   ;Save button
   $ButtonCancel = GUICtrlCreateButton("Cancel", 285, 400, 45, 30)    ;Cancel Button
   GUICtrlCreateTab(0, 0, 500, 390)
   GUICtrlCreateTabItem("Config")
   GUICtrlCreateLabel("License Key:", 15, 22)
   GUICtrlCreateLabel($dlicensekey, 100, 22)
   GUICtrlCreateLabel("Port:", 15, 40)
   $WIN[1] = GUICtrlCreateCombo("", 100, 40, 40)
   GUICtrlSetData($WIN[1], "1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50", $dport)
   GUICtrlCreateLabel("Baudrate:", 15, 65)
   $WIN[2] = GUICtrlCreateCombo("", 100, 65, 65)
   GUICtrlSetData($WIN[2], "9600|115200", $dbaud)
   GUICtrlCreateLabel("Speed Limit:", 15, 90)
   $WIN[3] = GUICtrlCreateCombo("", 100, 90, 40)
   GUICtrlSetData($WIN[3], "1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30", $dspeed)
   GUICtrlCreateLabel("Show Speed:", 15, 115)
   $WIN[4] = GUICtrlCreateCombo("", 100, 115, 50)
   GUICtrlSetData($WIN[4], "Yes|No", $dshow)
   GUICtrlCreateLabel("Default Block:", 15, 140)
   $WIN[5] = GUICtrlCreateCombo("", 100, 140, 70)
   GUICtrlSetData($WIN[5], "None|Keyboard|Mouse|Both", $dblock)
   GUICtrlCreateLabel("*Default Exclude:", 15, 165)
   $WIN[6] = GUICtrlCreateInput("", 100, 165, 385)
   GUICtrlSetData($WIN[6], $dexclude, $dexclude)
   GUICtrlCreateLabel("Allow Idle:", 15, 190)
   $WIN[7] = GUICtrlCreateCombo("", 100, 190, 40)
   GUICtrlSetData($WIN[7], "Yes|No", $didle)
   GUICtrlCreateLabel("Show Disclaimer:", 15, 215)
   $WIN[8] = GUICtrlCreateCombo("", 100, 215, 40)
   GUICtrlSetData($WIN[8], "Yes|No", $ddisclaimer)
   GUICtrlCreateLabel("Program Check:", 15, 240)
   $WIN[9] = GUICtrlCreateInput("", 100, 240, 385)
   GUICtrlSetData($WIN[9], $dprogcheck, $dprogcheck)
   GUICtrlCreateLabel("Program Run:", 15, 265)
   $WIN[10] = GUICtrlCreateInput("", 100, 265, 385)
   GUICtrlSetData($WIN[10], $dprogrun, $dprogrun)
   GUICtrlCreateLabel("Working Dir:", 15, 290)
   $WIN[11] = GUICtrlCreateInput("", 100, 290, 385)
   GUICtrlSetData($WIN[11], $ddir, $ddir)
   GUICtrlCreateLabel("Log path:", 15, 315)
   $WIN[12] = GUICtrlCreateInput("", 100, 315, 385)
   GUICtrlSetData($WIN[12], $dlogp, $dlogp)
   GUICtrlCreateLabel("Log Details:", 15, 340)
   $WIN[13] = GUICtrlCreateCombo("", 100, 340, 40)
   GUICtrlSetData($WIN[13], "Yes|No", $dlogopt)
   GUICtrlCreateLabel("*These values must be inside {} and seperated by |. Example {MMOVE} | {MCLICK}", 15, 365)
   GUICtrlCreateTabItem("Minimize")
   GUICtrlCreateLabel("Use these boxes (numbered 1-10) to automatically minimize windows once lockdown occurs.", 15, 22)
   GUICtrlCreateLabel("1.", 15, 50)
   $MIN[1] = GUICtrlCreateInput("", 40, 50, 450)
   GUICtrlSetData($MIN[1], $dauto1, $dauto1)
   GUICtrlCreateLabel("2.", 15, 85)
   $MIN[2] = GUICtrlCreateInput("", 40, 85, 450)
   GUICtrlSetData($MIN[2], $dauto2, $dauto2)
   GUICtrlCreateLabel("3.", 15, 120)
   $MIN[3] = GUICtrlCreateInput("", 40, 120, 450)
   GUICtrlSetData($MIN[3], $dauto3, $dauto3)
   GUICtrlCreateLabel("4.", 15, 155)
   $MIN[4] = GUICtrlCreateInput("", 40, 155, 450)
   GUICtrlSetData($MIN[4], $dauto4, $dauto4)
   GUICtrlCreateLabel("5.", 15, 190)
   $MIN[5] = GUICtrlCreateInput("", 40, 190, 450)
   GUICtrlSetData($MIN[5], $dauto5, $dauto5)
   GUICtrlCreateLabel("6.", 15, 225)
   $MIN[6] = GUICtrlCreateInput("", 40, 225, 450)
   GUICtrlSetData($MIN[6], $dauto6, $dauto6)
   GUICtrlCreateLabel("7.", 15, 260)
   $MIN[7] = GUICtrlCreateInput("", 40, 260, 450)
   GUICtrlSetData($MIN[7], $dauto7, $dauto7)
   GUICtrlCreateLabel("8.", 15, 295)
   $MIN[8] = GUICtrlCreateInput("", 40, 295, 450)
   GUICtrlSetData($MIN[8], $dauto8, $dauto8)
   GUICtrlCreateLabel("9.", 15, 330)
   $MIN[9] = GUICtrlCreateInput("", 40, 330, 450)
   GUICtrlSetData($MIN[9], $dauto9, $dauto9)
   GUICtrlCreateLabel("10.", 15, 365)
   $MIN[10] = GUICtrlCreateInput("", 40, 365, 450)
   GUICtrlSetData($MIN[10], $dauto10, $dauto10)
   GUISetState(@SW_SHOW) ;shows the GUI window
EndFunc

